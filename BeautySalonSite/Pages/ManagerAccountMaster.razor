@page "/manager/account/master"
@page "/manager/account/master/service/{ServiceId:int}"

@using BeautySalonSite.Models.EmployeeModels;
@using BeautySalonSite.Models.Other;
@using BeautySalonSite.Service.EmployeeService;
@using Microsoft.AspNetCore.Authorization;

@inject IEmployeeService EmployeeService

@attribute [Authorize(Roles = "Manager")]

<PageTitle>Личный кабинет</PageTitle>

<div class="container">
    <div class="py-5">
        <h2>Личный кабинет</h2>
    </div>
    <div class="row">
        <div class="col-md-4 order-md-1 mb-4">
            <div class="block m-1 p-4">
                <ManagerNavMenu></ManagerNavMenu>
            </div>
        </div>
        <div class="col-md-8 order-md-2">
            <div class="block m-1 p-4">
                <div class="mb-2 mt-2">
                    <h4 class="pb-3 my-1 px-2">Мои мастера</h4>
                </div>
            </div>
            <div class="py-3 text-center mb-1 mt-4">
                <h4>Мастера</h4>
            </div>
            @if (masters != null && masters.Length > 0)
            {
                @foreach (var master in masters)
                {
                    <div class="block mx-3 mb-3 p-3 pb-3 pe-4">
                        <div class="mb-3 d-flex justify-content-start align-content-center">
                            <div class="me-3">
                                <img src="@(master.PhotoPath == null? "/img/blank-profile.jpg" : master.PhotoPath)"
                                     class="rounded profile-photo" alt="Фотография мастера" />
                            </div>
                            <div>
                                <p>@master.ToString()</p>
                                @if (!string.IsNullOrEmpty(master.Specialization))
                                {
                                    <p>@master.Specialization</p>
                                }
                            </div>
                        </div>
                        <div>
                            <p><b>Почта:</b> @master.Email</p>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

@code {
    private Paging paging = new() { PageSize = 20 };

    private MasterWithEmail[]? masters;

    [Parameter]
    public int ServiceId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (ServiceId <= 0)
        {
            await GetMasters();
        }
        else
        {
            await GetMastersByService();
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        if (ServiceId <= 0)
        {
            await GetMasters();
        }
        else
        {
            await GetMastersByService();
        }
    }

    private async Task GetMasters()
    {
        var result = await EmployeeService.GetManagerMasters(paging);
        if (result.State == ResultState.Success)
        {
            masters = result.Value!.ToArray();
        }
    }

    private async Task GetMastersByService()
    {
        var result = await EmployeeService.GetManagerMastersByService(ServiceId, paging);
        if (result.State == ResultState.Success)
        {
            masters = result.Value!.ToArray();
        }
    }
}
