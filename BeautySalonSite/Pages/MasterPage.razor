@page "/salon/{SalonId:int}/master"

@using BeautySalonSite.Models.EmployeeModels;
@using BeautySalonSite.Models.Other;
@using BeautySalonSite.Service.EmployeeService;
@using BeautySalonSite.Service.SalonService;

@inject IEmployeeService EmployeeService
@inject ISalonService SalonService
@inject NavigationManager Navigation

<PageTitle>Мастера</PageTitle>

<div class="container">
    <div class="row my-5">
        <div class="col-md-12">
            <div class="py-3 text-center mb-1 mt-1 px-5">
                <h3>Мастера</h3>
            </div>
            @if (masters != null && masters.Length > 0)
            {
                @foreach (var master in masters)
                {
                    <div class="block mx-3 card mb-3 p-2 pb-3 pe-4">
                        <div class="card-body">
                            <div class="mb-4 d-flex justify-content-start align-content-center">
                                <div class="me-3">
                                    <img src="@(master.PhotoPath == null? "/img/blank-profile.jpg" : master.PhotoPath)"
                                         class="rounded profile-photo" alt="Фотография мастера" />
                                </div>
                                <div>
                                    <h5 class="card-title"><b>@($"{master.Name} {master.LastName}")</b></h5>
                                    <p class="card-text">@master.Specialization</p>
                                </div>
                            </div>
                        </div>
                        <div class="d-flex justify-content-end">
                            <AuthorizeView Roles="Client">
                                <Authorized>
                                    <a href="@($"client/account/appointment/salon/{SalonId}/master/{master.Id}/service")" class="btn btn-warning mt-1">Записаться</a>
                                </Authorized>
                                <NotAuthorized>
                                    <a href="login" class="btn btn-warning mt-1">Записаться</a>
                                </NotAuthorized>
                            </AuthorizeView>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int SalonId { get; set; }

    private Paging paging = new() { PageSize = 40 };

    private Master[]? masters;

    protected override async Task OnInitializedAsync()
    {
        await SetDefaultSalon();
        await GetMasters();
    }

    protected override async Task OnParametersSetAsync()
    {
        await SetDefaultSalon();
        await GetMasters();
    }

    private async Task SetDefaultSalon()
    {
        if (SalonId <= 0)
        {
            await GetCurrentSalonId();
            Navigation.NavigateTo($"salon/{SalonId}/master");
        }
    }

    private async Task GetCurrentSalonId()
    {
        var resultSalonId = await SalonService.GetSalonIdFromLocalStorage();
        if (resultSalonId.State == ResultState.Success)
        {
            SalonId = resultSalonId.Value!;
        }
    }

    private async Task GetMasters()
    {
        var result = await EmployeeService.GetMasters(SalonId, paging);
        if (result.State == ResultState.Success)
        {
            masters = result.Value!.ToArray();
        }
    }
}
