@page "/master/account/perfomance"

@using BeautySalonSite.Models.ScheduleModels;
@using BeautySalonSite.Service.AppointmentService;
@using Microsoft.AspNetCore.Authorization;

@inject IAppointmentService AppointmentService

@attribute [Authorize(Roles = "Master")]

<PageTitle>Успеваемость на работе</PageTitle>

<div class="container">
    <div class="py-5">
        <h2>Личный кабинет</h2>
    </div>
    <div class="row">
        <div class="col-md-4 order-md-1 mb-4">
            <div class="block m-1 p-4">
                <MasterNavMenu></MasterNavMenu>
            </div>
        </div>
        <div class="col-md-8 order-md-2">
            <div class="block m-1 p-4">
                <div class="mb-2 mt-2">
                    <h4 class="pb-3 my-3 px-2">Успеваемость</h4>

                    <div class="form-row">
                        <div class="col-md-6">
                            <label for="startDate">Дата начала</label>
                            <input type="date" class="form-control" id="startDate" @bind="dateRange.StartDate" />
                        </div>
                        <div class="col-md-6 my-2">
                            <label for="endDate">Дата окончания</label>
                            <input type="date" class="form-control" id="endDate" @bind="dateRange.EndDate" />
                        </div>
                    </div>

                    <button class="btn btn-primary my-3" @onclick="GetStatistics">Получить статистику</button>

                    @if (appointmentCount != null && income != null)
                    {
                        <div class="mt-4">
                            <p><b>Количество оказанных услуг:</b> @appointmentCount</p>
                            <p><b>Доход за оказанные услуги:</b> @income</p>
                        </div>
                    }
                    else
                    {
                        <p class="text-center">Загрузка данных...</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private int? appointmentCount;
    private decimal? income;

    private DateRange dateRange = new() 
    { 
        StartDate = DateOnly.FromDateTime(DateTime.Today.AddMonths(-1)),
        EndDate = DateOnly.FromDateTime(DateTime.Today)
    };

    protected override async Task OnInitializedAsync()
    {
        await GetStatistics();
    }

    private async Task GetStatistics()
    {
        await GetAppointmentCount();
        await GetIncome();
    }

    private async Task GetAppointmentCount()
    {
        var result = await AppointmentService.GetMasterAppointmentCount(dateRange);
        if (result.State == Models.Other.ResultState.Success)
        {
            appointmentCount = result.Value!;
        }
    }

    private async Task GetIncome()
    {
        var result = await AppointmentService.GetMasterAppointmentIncome(dateRange);
        if (result.State == Models.Other.ResultState.Success)
        {
            income = result.Value!;
        }
    }
}
