@page "/manager/account/client/{ClientId:int}"

@using BeautySalonSite.Models.CustomerModels;
@using BeautySalonSite.Models.Other;
@using BeautySalonSite.Service.CustomerService;
@using Microsoft.AspNetCore.Authorization;

@inject ICustomerService CustomerService

@attribute [Authorize(Roles = "Manager")]

<PageTitle>Личный кабинет</PageTitle>

<div class="container">
    <div class="py-5">
        <h2>Личный кабинет</h2>
    </div>
    <div class="row">
        <div class="col-md-4 order-md-1 mb-4">
            <div class="block m-1 p-4">
                <ManagerNavMenu></ManagerNavMenu>
            </div>
        </div>
        <div class="col-md-8 order-md-2">
            <div class="block m-1 p-4">
                <div class="mb-2 mt-2">
                    <h4 class="pb-3 my-1">Информация о клиенте</h4>
                </div>
                <div class="mb-4">
                    <div>
                        <p><b>Имя:</b> @customer?.Name</p>
                        @if (customer?.Birthday is null)
                        {
                            <p><b>Дата рождения:</b> не указана</p>
                        }
                        else
                        {
                            <p><b>Дата рождения:</b> @customer?.Birthday?.ToString("dd.MM.yyyy")</p>
                        }
                        <p><b>Email:</b> @customer?.Email</p>
                        <p><b>Телефон:</b> @customer?.Phone</p>
                    </div>
                </div>
                <hr />
                <div>
                    @if (firstDate != null)
                    {
                        <div class="my-4">
                            <p>Дата первой записи клиента: @(firstDate.AppointmentDate?.ToString() ?? "Нет данных")</p>
                            @if (firstDate.Duration.HasValue)
                            {
                                <p>Количество дней с первой записи: @firstDate.Duration.Value дней</p>
                            }
                            else
                            {
                                <p>Количество дней с первой записи: Нет данных</p>
                            }
                        </div>
                    }
                    else
                    {
                        <p>Нет доступной информации о первой записи клиента.</p>
                    }
                    @if (lastDate != null)
                    {
                        <div class="my-4">
                            <p>Дата последней записи клиента: @(lastDate.AppointmentDate?.ToString() ?? "Нет данных")</p>
                            @if (lastDate.Duration.HasValue)
                            {
                                <p>Количество дней с последней записи: @lastDate.Duration.Value дней</p>
                            }
                            else
                            {
                                <p>Количество дней с последней записи: Нет данных</p>
                            }
                        </div>
                    }
                    else
                    {
                        <p>Нет доступной информации о последней записи клиента.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int ClientId { get; set; }

    private CustomerAppointmentDate? firstDate;
    private CustomerAppointmentDate? lastDate;

    private FullCustomer? customer;

    protected override async Task OnInitializedAsync()
    {
        if (ClientId > 0)
        {
            await GetCustomer();
            await GetFirstAppointmentDate();
            await GetLastAppointmentDate();
        }
    }

    private async Task GetCustomer()
    {
        var result = await CustomerService.GetCustomerById(ClientId);
        if (result.State == ResultState.Success)
        {
            customer = result.Value!;
        }
    }

    private async Task GetFirstAppointmentDate()
    {
        var result = await CustomerService.GetFirstCustomerAppointmentDate(ClientId);
        if (result.State == ResultState.Success)
        {
            firstDate = result.Value!;
        }
    }

    private async Task GetLastAppointmentDate()
    {
        var result = await CustomerService.GetLastCustomerAppointmentDate(ClientId);
        if (result.State == ResultState.Success)
        {
            lastDate = result.Value!;
        }
    }
}
