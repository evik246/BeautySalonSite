@page "/"
@page "/salon/{SalonId:int}"

@using BeautySalonSite.Models.CategoryModels;
@using BeautySalonSite.Service.CategoryService;
@using BeautySalonSite.Service.SalonService;

@inject ISalonService SalonService
@inject ICategoryService CategoryService
@inject NavigationManager Navigation

<PageTitle>Главная</PageTitle>

@*HERO*@
<section id="hero" class="justify-content-end d-flex flex-column">
    <div class="container">
        <div class="row">
            <div class="col-lg-6">
                <h1 class="display-4 mb-2 fw-bold text-white">Вы заслуживаете лучшего!</h1>
                <p class="text-white">Запишитесь на наши услуги! Вам точно понравится!</p>
                <AuthorizeView Roles="Client">
                    <Authorized>
                        <a href="client/account/appointment" class="btn btn-warning mt-4 btn-lg">Записаться</a>
                    </Authorized>
                    <NotAuthorized>
                        <a href="login" class="btn btn-warning mt-4 btn-lg">Записаться</a>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>
    </div>
</section>

@*ABOUT*@
<section id="about" class="bg-white">
    <div class="container">
        <div class="row justify-content-md-center">
            <div class="col-lg-6 text-center">
                <h4 class="text-warning">Про нас</h4>
                <h2 class="mb-4">Салон красоты <b>Benetty</b></h2>
                <p>Салон красоты, где искусство стиля и ухода за внешностью сочетается с непревзойденным качеством обслуживания. У нас вы найдете весь спектр услуг для создания неповторимого образа</p>
            </div>
        </div>
    </div>
</section>

@*SERVICES*@
@if (categories is not null && categories.Any())
{
    <section id="services" class="bg-white">
        <div class="container">
            <div class="row justify-content-md-center">
                <div class="col-lg-6 text-center">
                    <h4 class="text-warning">Мы предлагаем</h4>
                    <h2 class="mb-4">Услуги</h2>
                </div>
            </div>
            <div class="row justify-content-md-center">
                <div class="col-lg-6 list-group">
                    @foreach (var category in categories)
                    {
                        <div class="p-3 list-group-item d-flex align-content-center justify-content-between align-items-center">
                            <p class="my-auto">@category.Name</p>
                            <a href="@($"/service/category/{category.Id}")" value="@category.Id" class="btn btn-warning">Посмотреть</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>
}

@*RESULTS*@
<section id="results" class="bg-white">
    <div class="container">
        <div class="row justify-content-md-center">
            <div class="col-lg-6 text-center">
                <h4 class="text-warning">Вдохновение</h4>
                <h2 class="mb-4">Наши работы</h2>
            </div>
        </div>
        <div class="scroll-container">
            <img src="img/results/1.jpeg"/>
            <img src="img/results/2.jpg" />
            <img src="img/results/3.jpg" />
            <img src="img/results/4.jpg" />
            <img src="img/results/5.jpg" />
        </div>
    </div>
</section>

@code {
    [Parameter]
    public int SalonId { get; set; }

    private Category[]? categories;
    public string CategoryId { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await GetSalonIdFromStorage();
        if (SalonId > 0)
        {
            Navigation.NavigateTo($"salon/{SalonId}");
        }
        await GetCategories();
    }

    protected override async Task OnParametersSetAsync()
    {
        await GetCategories();
    }

    private async Task GetSalonIdFromStorage()
    {
        var result = await SalonService.GetSalonIdFromLocalStorage();
        if (result.State == Models.Other.ResultState.Success)
        {
            SalonId = result.Value!;
        }
    }

    private async Task GetCategories()
    {
        var result = await CategoryService.GetCategories(SalonId);
        if (result.State == Models.Other.ResultState.Success)
        {
            categories = result.Value!.ToArray();
        }
    }
}
