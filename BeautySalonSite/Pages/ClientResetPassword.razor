@page "/client/account/reset_password"

@using BeautySalonSite.Models.CustomerModels;
@using BeautySalonSite.Models.ErrorModels;
@using BeautySalonSite.Models.ExceptionModels;
@using BeautySalonSite.Service.AuthService;
@using Microsoft.AspNetCore.Authorization;

@inject IAuthService AuthService
@inject NavigationManager Navigation

@attribute [Authorize(Roles = "Client")]

<PageTitle>Личный кабинет</PageTitle>

<div class="container">
    <div class="py-5">
        <h2>Личный кабинет</h2>
    </div>
    <div class="row">
        <div class="col-md-4 order-md-1 mb-4">
            <div class="block m-1 p-4">
                <ClientNavMenu></ClientNavMenu>
            </div>
        </div>
        <div class="col-md-8 order-md-2">
            <div class="block m-1 p-4">

                <h4 class="mb-5">Обновление пароля</h4>

                @if (error is not null)
                {
                    <div class="alert alert-danger" role="alert">
                        @error.Message
                    </div>
                }

                <EditForm class="mt-5" Model="@passwordForm" OnValidSubmit="@ResetPassword">
                    <DataAnnotationsValidator />

                    <div class="form-group row mt-4">
                        <label for="CurrentPassword" class="col-sm-3 col-form-label"><b>Текущий пароль:</b></label>
                        <div class="col-sm-8">
                            <InputText id="CurrentPassword" class="form-control" @bind-Value=passwordForm.CurrentPassword />
                            <ValidationMessage For="@(() => passwordForm.CurrentPassword)" />
                        </div>
                    </div>

                    <div class="form-group row mt-4">
                        <label for="NewPassword" class="col-sm-3 col-form-label"><b>Новый пароль:</b></label>
                        <div class="col-sm-8">
                            <InputText id="NewPassword" class="form-control" @bind-Value=passwordForm.NewPassword />
                            <ValidationMessage For="@(() => passwordForm.NewPassword)" />
                        </div>
                    </div>

                    <div class="form-group row mt-4">
                        <label for="ConfirmPassword" class="col-sm-3 col-form-label"><b>Подтверждение нового пароля:</b></label>
                        <div class="col-sm-8">
                            <InputText id="ConfirmPassword" class="form-control" @bind-Value=passwordForm.ConfirmPassword />
                            <ValidationMessage For="@(() => passwordForm.ConfirmPassword)" />
                        </div>
                    </div>

                    <div class="d-flex justify-content-end">
                        <button type="submit" class="btn btn-warning mt-5">Подтвердить</button>
                    </div>
                </EditForm>

            </div>
        </div>
    </div>
</div>

@code {
    private ResetPasswordRequest passwordForm = new();

    private Error? error;

    private async Task ResetPassword()
    {
        var result = await AuthService.ResetPassword(passwordForm);

        if (result.State == Models.Other.ResultState.Success)
        {
            Navigation.NavigateTo("client/account");
        }

        if (result.State == Models.Other.ResultState.Failure)
        {
            if (result.Exception is UnauthorizedException)
            {
                error = new() { Message = "Неправильный текущий пароль" };
            }
        }
    }
}
