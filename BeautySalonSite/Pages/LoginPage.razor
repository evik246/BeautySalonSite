@page "/login"

@using BeautySalonSite.Models;
@inject HttpClient Http

<PageTitle>Вход в учетную запись</PageTitle>

<section>
    <div class="container">
        <div class="row">
            <div class="h-100 d-flex align-items-center justify-content-center">
                <EditForm class="form-floating mb-4" Model="@user" OnValidSubmit="@Login">
                    <DataAnnotationsValidator />
                    <h2 class="text-center my-5">Вход в учетную запись</h2>
                    <div class="form-group mb-3">
                        <label class="col-form-label" for="Email">Почта</label>
                        <InputText id="Email" class="form-control" @bind-Value=user.Email />
                        <ValidationMessage For="@(() => user.Email)" />
                    </div>
                    <div class="form-group mb-3">
                        <label class="col-form-label" for="Password">Пароль</label>
                        <InputText type="password" id="Password" class="form-control" @bind-Value=user.Password />
                        <ValidationMessage For="@(() => user.Password)" />
                    </div>
                    <button type="submit" class="btn btn-warning col-12 mt-5 mb-3">Войти</button>
                    <p class="text-center my-2">или <a href="registration" class="link-yellow">регистрация</a></p>
                </EditForm>
            </div>
        </div>
    </div>
</section>

@code {
    public UserLogin user { get; set; } = new();

    protected async Task Login()
    {
        HttpResponseMessage response = await Http.PostAsJsonAsync<UserLogin>("auth/login", user);
        string token = await response.Content.ReadAsStringAsync();


    }
}
